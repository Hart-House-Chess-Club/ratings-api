name: Docker Build and Deploy

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker Buildx for better caching and multi-platform support
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata for the Docker image
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}/fide-api
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}

      # Build and push the Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull the latest image
            docker pull ghcr.io/${{ github.repository }}/fide-api:latest
            
            # Create or update docker-compose.yml
            cat > ~/fide-api-docker-compose.yml << 'EOL'
            services:
              fide-api:
                container_name: fide-api
                image: ghcr.io/${{ github.repository }}/fide-api:latest
                restart: always
                ports:
                  - "8000:8000"
                environment:
                  - REDIS_HOST=redis
                  - REDIS_PORT=6379
                  - REDIS_DB=0
                  - CACHE_EXPIRY=3600
                  - MONGO_URI=mongodb://mongodb:27017/
                  - MONGO_DB=fide_api
                  - FIDE_DOWNLOAD_URL=http://ratings.fide.com/download/players_list_xml.zip
                  - CFC_DOWNLOAD_URL=https://www.chess.ca/wp-content/uploads/tdlist.txt
                depends_on:
                  - redis
                  - mongodb
                
              redis:
                image: redis:7-alpine
                container_name: fide-redis
                restart: always
                volumes:
                  - redis-data:/data
                command: redis-server --save 60 1 --loglevel warning
                
              mongodb:
                image: mongo:6
                container_name: fide-mongodb
                restart: always
                volumes:
                  - mongodb-data:/data/db
                command: mongod --quiet --logpath /dev/null

            volumes:
              redis-data:
              mongodb-data:
            EOL
            
            # Run with docker-compose
            docker-compose -f ~/fide-api-docker-compose.yml down
            docker-compose -f ~/fide-api-docker-compose.yml up -d
            
            # Initialize rating lists if needed
            echo "Initializing rating lists (this may take a while)..."
            docker exec fide-api bash -c "chmod +x /app/initialize_rating_lists.sh && /app/initialize_rating_lists.sh"
            
            # Start the updater service in the background
            docker exec -d fide-api bash -c "chmod +x /app/start_updater_service.sh && /app/start_updater_service.sh"
